{"version":3,"file":"EventListView-c5DdWoUQ.js","sources":["../../src/composables/usePagination.js","../../src/views/EventListView.vue"],"sourcesContent":["import { computed, ref } from \"vue\";\r\nimport { TypeUtils } from \"@/helpers\";\r\n\r\n/**\r\n * 預設的每頁筆數。\r\n * @type {number}\r\n */\r\nconst defaultPageSize = 10;\r\n\r\n/**\r\n * 預設的頁碼。\r\n * @type {number}\r\n */\r\nconst defaultCurrentPage = 1;\r\n\r\n/**\r\n * 分頁工具的參數模型。\r\n */\r\nexport class PaginationParam {\r\n  /**\r\n   * 資料集。\r\n   * @type {Array}\r\n   */\r\n  datas;\r\n\r\n  /**\r\n   * 每頁筆數。\r\n   * @type {number}\r\n   */\r\n  pageSize;\r\n\r\n  /**\r\n   * 本頁頁碼。\r\n   * @type {number}\r\n   */\r\n  currentPage;\r\n\r\n  /**\r\n   * 建立分頁工具所需要的參數。\r\n   * @param {Array} datas 資料集。\r\n   * @param {number} [pageSize] 每頁筆數，預設 10 筆。\r\n   * @param {number} [currentPage] 本頁頁碼，預設為第 1 頁。\r\n   */\r\n  constructor(datas, pageSize = defaultPageSize, currentPage = defaultCurrentPage) {\r\n    this.datas = datas;\r\n    this.pageSize = pageSize;\r\n    this.currentPage = currentPage;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 依據傳入的資料建立分頁功能。\r\n * @param {PaginationParam} params 參數集合。\r\n * @returns {Pagination} 分頁相關資訊與方法。\r\n * @throws 若 datas、pageSize、currentPage 有問題會拋出錯誤。\r\n */\r\nexport function usePagination(params) {\r\n  /**\r\n   * 資料集。\r\n   * @type {Array}\r\n   */\r\n  const datas = params.datas;\r\n\r\n  // 檢核 datas\r\n  if (!(datas instanceof Array)) {\r\n    throw Error(\"[datas] 必須使用陣列！\");\r\n  }\r\n\r\n  /**\r\n   * 每頁筆數。\r\n   * @type {number}\r\n   */\r\n  let pageSize;\r\n\r\n  // 檢核 pageSize 並確保為數值\r\n  try {\r\n    pageSize = TypeUtils.converToNumber(params.pageSize);\r\n  } catch (error) {\r\n    throw new Error(`[pageSize] 不正確！`, { cause: error });\r\n  }\r\n\r\n  /**\r\n   * 本頁頁碼。\r\n   * @type {import('vue').Ref<number>}\r\n   */\r\n  let currentPage;\r\n\r\n  // 檢核 currentPage 並確保為數值\r\n  try {\r\n    currentPage = ref(TypeUtils.converToNumber(params.currentPage));\r\n  } catch (error) {\r\n    throw new Error(`[currentPage] 不正確！`, { cause: error });\r\n  }\r\n\r\n  /**\r\n   * 總筆數。\r\n   * @type {number}\r\n   */\r\n  const totalSize = datas.length;\r\n\r\n  /**\r\n   * 總頁數。\r\n   * @type {number}\r\n   */\r\n  let totalPages = Math.ceil(totalSize / pageSize);\r\n\r\n  /**\r\n   * 本頁資料，對應本頁頁碼的資料。\r\n   * @type {import('vue').ComputedRef<Array>}\r\n   */\r\n  const currentDatas = computed(() => {\r\n    const startIndex = (currentPage.value - 1) * pageSize;\r\n    const endIndex = currentPage.value * pageSize;\r\n    return datas.slice(startIndex, endIndex);\r\n  });\r\n\r\n  /**\r\n   * 切換頁面。\r\n   * @param {number} pageNo 頁碼。\r\n   * @throws 若 pageNo 不正確會拋出錯誤。\r\n   */\r\n  function changePage(pageNo) {\r\n    // 檢核 pageNo 型別並確保為數值\r\n    pageNo = TypeUtils.converToNumber(pageNo);\r\n\r\n    // 檢核 pageNo 有效性\r\n    if (pageNo < 1 || pageNo > totalPages) {\r\n      throw Error(`[pageNo] 頁碼應介於 1 ~ ${totalPages} 之間！`);\r\n    }\r\n\r\n    // 改變本頁頁碼為 pageNo\r\n    currentPage.value = pageNo;\r\n  }\r\n\r\n  /** 往下一頁。 */\r\n  function goToNextPage() {\r\n    const nextPage = currentPage.value + 1;\r\n    if (nextPage <= totalPages) {\r\n      currentPage.value = nextPage;\r\n    }\r\n  }\r\n\r\n  /** 往前一頁。 */\r\n  function goToPrevPage() {\r\n    const prevPage = currentPage.value - 1;\r\n    if (prevPage >= 1) {\r\n      currentPage.value = prevPage;\r\n    }\r\n  }\r\n\r\n  return {\r\n    currentDatas,\r\n    currentPage,\r\n    totalPages,\r\n    totalSize,\r\n    pageSize,\r\n    changePage,\r\n    goToNextPage,\r\n    goToPrevPage,\r\n  };\r\n}\r\n","<template>\r\n  <div class=\"container mt-4 mt-md-8\">\r\n    <h2 class=\"title mb-3 mb-md-8\">\r\n      <span class=\"title-english\">EVENT</span>\r\n      <span class=\"title-chinese\">所有活動</span>\r\n    </h2>\r\n\r\n    <!-- 標籤 -->\r\n    <ul class=\"d-flex flex-wrap gap-2 mb-8\" v-if=\"tagModel\">\r\n      <li v-for=\"tag in tagModel.datas\" :key=\"tag.id\">\r\n        <button\r\n          type=\"button\"\r\n          :class=\"selectedTagIds.includes(tag.id) ? 'tag-btn-selected' : 'tag-btn'\"\r\n          @click=\"toggleTag(tag.id)\"\r\n        >\r\n          {{ tag.name }}\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- 活動卡片 -->\r\n    <ul class=\"row row-gap-6 row-gap-md-12 mb-8 mb-md-15\" v-if=\"pagination\">\r\n      <li class=\"col-md-6 col-xl-4\" v-for=\"event in pagination.currentDatas\" :key=\"event.id\">\r\n        <EventCard :event=\"event\" />\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- 分頁 -->\r\n    <nav aria-label=\"Page navigation\" class=\"mb-12 mb-md-15\">\r\n      <ul class=\"pagination\" v-if=\"pagination\">\r\n        <!-- 前一頁 -->\r\n        <li class=\"page-item\" :class=\"{ disabled: pagination.currentPage === 1 }\">\r\n          <a class=\"page-link fs-18\" href=\"#\" @click.prevent=\"pagination.goToPrevPage\">\r\n            <i class=\"icofont-arrow-left\"></i>\r\n          </a>\r\n        </li>\r\n\r\n        <!-- 各頁面 -->\r\n        <template v-for=\"p in pagination.totalPages\" :key=\"p\">\r\n          <li class=\"page-item\" :class=\"{ active: pagination.currentPage === p }\">\r\n            <a class=\"page-link\" href=\"#\" @click.prevent=\"pagination.changePage(p)\">{{ p }}</a>\r\n          </li>\r\n        </template>\r\n\r\n        <!-- 下一頁 -->\r\n        <li\r\n          class=\"page-item\"\r\n          :class=\"{ disabled: pagination.currentPage === pagination.totalPages }\"\r\n        >\r\n          <a class=\"page-link fs-18\" href=\"#\" @click.prevent=\"pagination.goToNextPage\">\r\n            <i class=\"icofont-arrow-right\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FullLoadingHelper } from \"@/helpers\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { TagModel } from \"@/services/data/tag\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { EventTagModel, EventTagRecord } from \"@/services/data/event\";\r\nimport { EventListHistState } from \"@/services/features\";\r\nimport { useEventTag, usePagination, PaginationParam } from \"@/composables\";\r\nimport EventCard from \"@/components/global/EventCard.vue\";\r\n\r\n// 預設一頁筆數\r\nconst defaultPageSize = 12;\r\n\r\n// loading 工具\r\nconst loading = new FullLoadingHelper();\r\n\r\nexport default {\r\n  /**\r\n   * @returns {{selectedTagIds: number[], tagModel: TagModel, eventTagModel: EventTagModel, pagination: Pagination}}\r\n   */\r\n  data() {\r\n    return {\r\n      selectedTagIds: EventListHistState.getTagData(), // 選取的標籤，由 history state 初始化\r\n      tagModel: null, // 標籤資料模型\r\n      eventTagModel: null, // 活動資料模型\r\n      pagination: null, // 分頁工具\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 按下 Tag 按鈕要處理的動作。\r\n     * @param tagId {number} Tag ID。\r\n     */\r\n    toggleTag(tagId) {\r\n      const index = this.selectedTagIds.indexOf(tagId);\r\n\r\n      // Tag 已存在則刪除之\r\n      if (index >= 0) {\r\n        this.selectedTagIds.splice(index, 1);\r\n        /**\r\n         * watch selectedTagIds 相關說明：\r\n         * 若要使用 watch 監聽 selectedTagIds 並確保它會最先被執行，就不能直接使用 splice。\r\n         * 直接使用 splice 會先觸發 filteredEvents 的 computed，接著就會觸發其 watch，之後才會觸發 watch selectedTagIds，此情況下會因為頁碼尚未被更新而造成問題。\r\n         * 因此程式必須改用以下做法：\r\n         * const newTagIds = this.selectedTagIds.toSpliced(index, 1);\r\n         * this.selectedTagIds = newTagIds;\r\n         */\r\n      }\r\n      // 否則加入之\r\n      else {\r\n        this.selectedTagIds.push(tagId);\r\n      }\r\n\r\n      /**\r\n       * watch selectedTagIds 相關說明：\r\n       * 這段原本是寫成 watch 監聽 selectedTagIds，但由於會有一些不保險的因素，因此移至這邊進行更新。\r\n       */\r\n      // 依據選取的標籤更新 history state\r\n      EventListHistState.updateTagData(this.selectedTagIds);\r\n      // 變更 history state 裡的頁碼由第 1 頁開始\r\n      EventListHistState.updatePageData(1);\r\n    },\r\n  },\r\n  // methods end\r\n\r\n  computed: {\r\n    /**\r\n     * 活動資料集，會依據選取的標籤做篩選。\r\n     * @returns {EventTagRecord[]} 篩選後的活動資料集。\r\n     */\r\n    filteredEvents() {\r\n      // console.log(`[computed] filteredEvents Start ==>`, this.selectedTagIds, this.eventTagModel);\r\n\r\n      // 有活動資料\r\n      if (this.eventTagModel?.datas?.length > 0) {\r\n        // 有選擇標籤，且並不是全選，則進行活動資料篩選\r\n        if (\r\n          this.selectedTagIds?.length > 0 &&\r\n          this.selectedTagIds?.length < this.tagModel?.datas?.length\r\n        ) {\r\n          return this.eventTagModel.filterByTagIds(this.selectedTagIds);\r\n        }\r\n\r\n        // 否則直接返回所有活動資料\r\n        return this.eventTagModel.datas;\r\n      }\r\n\r\n      return [];\r\n    },\r\n  },\r\n  // computed end\r\n\r\n  watch: {\r\n    /**\r\n     * watch selectedTagIds 相關說明：\r\n     * 必須放在 filteredEvents 之前才能先被執行，這樣感覺很不保險。\r\n     * 再加上，selectedTagIds 在移除標籤時必須使用特定寫法才能確保此會先被執行。\r\n     * 這些因素感覺容易成為潛在的地雷，因此先不使用 watch selectedTagIds 的做法。\r\n     * 但仍保留此段程式註解，以茲說明。\r\n     */\r\n    /* selectedTagIds: {\r\n      deep: true,\r\n      handler(n) {\r\n        console.log(`[watch selectedTagIds] [before] ======>`, history.state);\r\n        // 依據選取的標籤更新 history state\r\n        EventListHistState.updateTagData(n);\r\n        // 變更 history state 裡的頁碼由第 1 頁開始\r\n        EventListHistState.updatePageData(1);\r\n        console.log(`[watch selectedTagIds] [after] ======>`, history.state);\r\n      },\r\n    }, */\r\n\r\n    /**\r\n     * 依據活動資料製作分頁工具。\r\n     * @param {EventTagRecord[]} n 篩選後的活動資料集。\r\n     */\r\n    filteredEvents(n) {\r\n      // console.log(`[watch filteredEvents] new ==>`, n.length, n);\r\n\r\n      // 由 history state 取回頁碼\r\n      const pageNo = EventListHistState.getPageData();\r\n      // console.log(`[watch filteredEvents] pageNo ====> ${pageNo}`);\r\n\r\n      const param = new PaginationParam(n, defaultPageSize, pageNo);\r\n      this.pagination = usePagination(param);\r\n      // console.log(`[watch filteredEvents] this.pagination =====>`, this.pagination);\r\n    },\r\n\r\n    /**\r\n     * 依據分頁工具裡的頁碼更新 history state 的頁碼。\r\n     * @param {number} n 頁碼。\r\n     */\r\n    \"pagination.currentPage\"(n) {\r\n      // console.log(`[watch pagination] =======>`, n);\r\n      EventListHistState.updatePageData(n);\r\n    },\r\n\r\n    /**\r\n     * 當本頁資料改變時，自動捲動到最上面。\r\n     */\r\n    \"pagination.currentDatas\"() {\r\n      window.scrollTo({ top: 0 });\r\n    },\r\n  },\r\n  // watch end\r\n\r\n  components: {\r\n    EventCard,\r\n  },\r\n\r\n  created() {\r\n    // console.log(`[EventListView] created........`, this);\r\n    // console.log(`history.state ======>`, history.state);\r\n    loading.open();\r\n\r\n    // 取得標籤、活動\r\n    useEventTag()\r\n      .then((res) => {\r\n        this.tagModel = res.tagModel;\r\n        this.eventTagModel = res.eventTagModel;\r\n\r\n        // TODO DELETE\r\n        // console.log(`res ========>`, res);\r\n        // console.log(res.tagModel);\r\n        // console.log(res.eventTagModel);\r\n        // console.log(`this.tagModel =====>`, this.tagModel);\r\n        console.log(`this.eventTagModel =====>`, this.eventTagModel);\r\n      })\r\n      .finally(() => {\r\n        loading.close();\r\n      });\r\n  },\r\n  // created end\r\n};\r\n</script>\r\n"],"names":["defaultPageSize","defaultCurrentPage","PaginationParam","datas","pageSize","currentPage","__publicField","usePagination","params","TypeUtils","error","ref","totalSize","totalPages","currentDatas","computed","startIndex","endIndex","changePage","pageNo","goToNextPage","nextPage","goToPrevPage","prevPage","loading","FullLoadingHelper","_sfc_main","EventListHistState","tagId","index","_b","_a","_c","_d","_f","_e","n","param","EventCard","useEventTag","res","_hoisted_1","_openBlock","_createElementBlock","_createElementVNode","$data","_hoisted_2","_Fragment","_renderList","tag","$event","$options","_toDisplayString","_hoisted_3","_hoisted_4","event","_createVNode","_component_EventCard","_hoisted_5","_hoisted_6","_normalizeClass","args","p","_withModifiers","_hoisted_7"],"mappings":"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"}